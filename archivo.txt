
        //Burbuja

        public void ordenar_burbuja()
        {
            int t;
            tiempo_burburja = new Stopwatch();
            tiempo_burburja.Start();
            contador_ciclos = 0;
            contador_intercambios = 0;
            
            for (int i = 1; i < arreglo.Length; i++) //(i=1;1<4;i++)   (i=3;3<4;i++)
                for (int j = arreglo.Length - 1; j >= i; j--)//(j=3;3>=1;j--) (j=1;1>=1;j--)
                {       //5                  1
                    contador_ciclos++;
                    if (arreglo[j - 1] > arreglo[j])//
                    {
                        contador_intercambios++;
                        //codigo de intercambio
                        t = arreglo[j - 1]; //5
                        arreglo[j - 1] = arreglo[j];//1
                        arreglo[j] = t;//5
                      //  1                5
                    }
                }
            tiempo_burburja.Stop();
            tiempo_final_burbuja = (float)tiempo_burburja.Elapsed.TotalMilliseconds;
        }
        
        
        public void ordenar_insercion()
        {

           // int tiempo;
            tiempo_burburja = new Stopwatch();
            tiempo_burburja.Start();
            contador_ciclos = 0;
            contador_intercambios = 0;

            for (int i = 0; i < arreglo.Length; i++)//4 ciclos
            {
                int t = arreglo[i];
                int j = i - 1;
                
                while ((j >= 0) && arreglo[j] > t)
                {
                    contador_ciclos++;
                    contador_intercambios++;

                    arreglo[j + 1] = arreglo[j]; 
                    j--;

                }

                arreglo[j + 1] = t;
            }

            tiempo_burburja.Stop();
            tiempo_final_burbuja = (float)tiempo_burburja.Elapsed.TotalMilliseconds;

        }
        
        
        public void ordenar_seleccion()
        {
            int menor, posicion, auxiliar;

            tiempo_burburja = new Stopwatch();
            tiempo_burburja.Start();
            contador_ciclos = 0;
            contador_intercambios = 0;

            for (int i = 0; i < arreglo.Length - 1; i++)
            {
                menor = arreglo[i];
                posicion = i;

                for (int j = i + 1; j < arreglo.Length; j++)
                {
                    contador_ciclos++;
                    if (arreglo[j] < menor)
                    {
                        
                        menor = arreglo[j];
                        posicion = j;
                    }
                }

                if (posicion != i)
                {
                   
                    auxiliar = arreglo[i];
                    arreglo[i] = arreglo[posicion];
                    arreglo[posicion] = auxiliar;
                    contador_intercambios++;
                }
            }
            tiempo_burburja.Stop();
            tiempo_final_burbuja = (float)tiempo_burburja.Elapsed.TotalMilliseconds;
            
        }


public void quick_sort(int[] arr, int inicio, int fin)
        {
            contador_ciclos = 0;
            contador_intercambios = 0;

            tiempo_burburja = new Stopwatch();
            tiempo_burburja.Start();
                               //5+(8-5) =8/2
            int pivote = arr[(inicio + (fin - inicio) / 2)];
                int izquierda = inicio;//5
                int derecha = fin;//8
                while (izquierda <= derecha)//5<=8
                {
                
                    while (arr[izquierda] < pivote)//
                    {
                    contador_ciclos++;
                    izquierda++;
                    }
                    while (arr[derecha] > pivote)
                    {
                    contador_ciclos++;
                    derecha--;
                    }
                    if (izquierda <= derecha)//
                    {
                        swap(arr, izquierda, derecha);
                    izquierda++;
                    derecha--;
                    }

                }
                if (inicio < derecha)
                {
                   quick_sort(arr, inicio, izquierda - 1);
                }
                if (fin > izquierda)
                {
                   quick_sort(arr, izquierda + 1, fin);
                }

            tiempo_burburja.Stop();
            tiempo_final_burbuja = (float)tiempo_burburja.Elapsed.TotalMilliseconds;
        }
        
        
        
         /*hellsort
         static void shellSort(int[] arr, int n) {
         int i, j, pos, temp;
         pos = 3;
         while (pos > 0) {
            for (i = 0; i < n; i++) {
               j = i;
               temp = arr[i];
               while ((j >= pos) && (arr[j - pos] > temp)) {
                  arr[j] = arr[j - pos];
                  j = j - pos;
               }
               arr[j] = temp;
            }
            if (pos / 2 != 0)
            pos = pos / 2;
            else if (pos == 1)
            pos = 0;
            else
            pos = 1;
         }

         */